<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Adityas-MacBook-Pro.local" name="myDSLInterfaceTest" tests="15" errors="0" failures="0" skipped="0" time="0.05" timestamp="2022-03-20T16:16:28">
          <properties>
      <property name="java.specification.version" value="17"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/><property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/17.0.1_1/libexec/openjdk.jdk/Contents/Home/lib"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/1.6.1/libexec/bin/sbt-launch.jar clean test"/><property name="jdk.debug" value="release"/><property name="sun.stderr.encoding" value="UTF-8"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2021-10-19"/><property name="java.home" value="/usr/local/Cellar/openjdk/17.0.1_1/libexec/openjdk.jdk/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="sun.stdout.encoding" value="UTF-8"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="17.0.1+1"/><property name="user.name" value="aditya"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/Users/aditya/Library/Caches/JNA/temp/jna17893072731848604192.tmp"/><property name="java.vendor.version" value="Homebrew"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/var/folders/12/nxzz5fc90fndwgcf0303mg9w0000gn/T/"/><property name="java.version" value="17.0.1"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="native.encoding" value="UTF-8"/><property name="java.library.path" value="/Users/aditya/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="Homebrew"/><property name="scala.ext.dirs" value="/Users/aditya/.sbt/1.0/java9-rt-ext-homebrew_17_0_1"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="java.class.path" value="/usr/local/Cellar/sbt/1.6.1/libexec/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Homebrew"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="America/Chicago"/><property name="java.vm.specification.version" value="17"/><property name="os.name" value="Mac OS X"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="GB"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/aditya"/><property name="user.language" value="en"/><property name="sbt.script" value="/usr/local/Cellar/sbt/1.6.1/libexec/bin/sbt"/><property name="swoval.tmpdir" value="/Users/aditya/.sbt/1.0"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="12.2.1"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib:/usr/lib"/><property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/><property name="user.dir" value="/Users/aditya/Documents/CS474/anair38-474-hw1"/><property name="os.arch" value="x86_64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="17.0.1+1"/><property name="java.class.version" value="61.0"/>
    </properties>
          <testcase classname="myDSLInterfaceTest" name="Feature: Interface creation Scenario: no private/protected fields in Interface" time="0.022">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: Interface creation Scenario: abstract methods cannot have body" time="0.001">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: Interface creation Scenario: interface methods cannot be concrete" time="0.001">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: Interface creation Scenario: interfaces cannot have constructors" time="0.001">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: interface inheritance Scenario: inherited fields" time="0.001">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: interface inheritance Scenario: cyclic composition should throw error" time="0.001">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: interface implements Scenario: multiple interfaces with duplicate fields" time="0.002">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: interface implements Scenario: class instance using fields from implemented interfaces" time="0.002">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: interface implements Scenario: prioritizing inherited fields over implemented interface fields" time="0.008">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: interface implements Scenario: classes must implement all methods of interface" time="0.003">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: interface implements Scenario: Interface dynamic dispatch" time="0.0">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: Abstract class creation Scenario: abstract class must have atleast one abstract method(s)" time="0.005">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: Abstract class creation Scenario: classes must implement all abstract methods in inherited abstract class" time="0.003">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: Abstract class creation Scenario: class inheriting abstract class" time="0.0">
                      
                    </testcase><testcase classname="myDSLInterfaceTest" name="Feature: Abstract class creation Scenario: abstract class upcasting" time="0.0">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>